{
  "openapi": "3.0.0",
  "info": {
    "title": "Piazza API",
    "description": "Documentation for the Piazza API for Cloud Computing Concepts Coursework at Birkbeck University",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "paths": {
    "/api/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get all posts",
        "description": "Get all the posts from the collection",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/users/{userId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by userId",
        "description": "Delete a user by the userId from the collection",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "This is the UserId in the MongoDB collection"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by userId",
        "description": "Get a user by the UserId from the collection",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "This is the UserId in the MongoDB collection"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/users/username/{username}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by username",
        "description": "Delete a user by the userId from the collection",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "This is the username for the user to delete in the MongoDB collection"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/users/email/{email}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by email",
        "description": "Delete a user by the email from the collection",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "description": "This is the email for the user to delete in the MongoDB collection",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Get all the users from the collection",
        "parameters": [
          {
            "name": "auth-token",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user",
        "description": "Register a new user in the collection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Register a new user",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "test"
                },
                "email": {
                  "type": "string",
                  "example": "test@test.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": [
                "username",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/searchByEmail/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user by email",
        "description": "Search a user by the email",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}